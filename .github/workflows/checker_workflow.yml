name: User Checker Automation

# 1. QUANDO EXECUTAR
on:
  # Agendamento: Executa o workflow a cada 4 horas (ex: 00:00, 04:00, 08:00, etc. UTC)
  schedule:
    - cron: '0 */4 * * *' 
  
  # Permite execução manual através da interface do GitHub (o botão "Run workflow")
  workflow_dispatch:

# 2. O QUE FAZER
jobs:
  run-checker:
    # Define o ambiente de execução
    runs-on: ubuntu-latest

    # Permissões necessárias para que o GitHub Action possa criar um Issue
    permissions:
      issues: write

    steps:
      # Passo 1: Clona o código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Passo 3: Instala as dependências (requests e beautifulsoup4)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Passo 4: Executa o script Python e captura sua saída (a mensagem de erro/diferença)
      - name: Run checker script and get output
        id: runscript
        run: |
          OUTPUT=$(python checker.py)
          echo "script_output=$OUTPUT" >> $GITHUB_OUTPUT
        # Permite que este passo continue mesmo se o Python retornar um erro (para que o Issue seja criado)
        continue-on-error: true

      # Passo 5: Cria um Issue SE a saída do script Python NÃO estiver vazia
      - name: Create Issue on Difference Found
        if: steps.runscript.outputs.script_output != ''
        uses: actions/github-script@v7
        with:
          script: |
            const scriptOutput = "${{ steps.runscript.outputs.script_output }}";
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'DIFERENÇA ENCONTRADA: Revisar status do usuário!',
              body: scriptOutput,
              labels: ['bug', 'automatic-check']
            })